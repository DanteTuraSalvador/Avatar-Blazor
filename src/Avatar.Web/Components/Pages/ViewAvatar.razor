@page "/avatars/{id:int}"
@inject IAvatarService AvatarService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>View Avatar - Avatar Manager</PageTitle>

<div class="container">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            @if (isLoading)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p>Loading avatar...</p>
                </div>
            }
            else if (avatar == null)
            {
                <div class="alert alert-danger">
                    <h5><i class="bi bi-exclamation-triangle"></i> Avatar Not Found</h5>
                    <p>The avatar with ID @Id was not found.</p>
                    <a href="/avatars" class="btn btn-primary">
                        <i class="bi bi-arrow-left"></i> Back to Avatars
                    </a>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3><i class="bi bi-eye"></i> View Avatar</h3>
                        <div>
                            <a href="/avatars/edit/@avatar.Id" class="btn btn-primary btn-sm">
                                <i class="bi bi-pencil"></i> Edit
                            </a>
                            <button @onclick="DeleteAvatar" class="btn btn-danger btn-sm ms-2">
                                <i class="bi bi-trash"></i> Delete
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                @if (!string.IsNullOrWhiteSpace(avatar.ImageUrl))
                                {
                                    <div class="text-center mb-3">
                                        <img src="@avatar.ImageUrl" 
                                             alt="@avatar.Name" 
                                             class="img-fluid rounded border"
                                             style="max-width: 100%; max-height: 300px;"
                                             onerror="this.style.display='none'; this.nextElementSibling.style.display='block';" />
                                        <div style="display: none;" class="text-muted p-4 border rounded">
                                            <i class="bi bi-image" style="font-size: 3rem;"></i>
                                            <br />Image could not be loaded
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="text-center text-muted p-4 border rounded">
                                        <i class="bi bi-image" style="font-size: 3rem;"></i>
                                        <br />No image available
                                    </div>
                                }
                            </div>
                            <div class="col-md-8">
                                <table class="table table-borderless">
                                    <tbody>
                                        <tr>
                                            <th scope="row" style="width: 30%;">ID:</th>
                                            <td>@avatar.Id</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Name:</th>
                                            <td><strong>@avatar.Name</strong></td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Category:</th>
                                            <td>
                                                <span class="badge bg-secondary">@(avatar.Category ?? "Not specified")</span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Status:</th>
                                            <td>
                                                <span class="badge @(avatar.IsActive ? "bg-success" : "bg-secondary")">
                                                    @(avatar.IsActive ? "Active" : "Inactive")
                                                </span>
                                            </td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Description:</th>
                                            <td>@(avatar.Description ?? "No description provided")</td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Image URL:</th>
                                            <td>
                                                @if (!string.IsNullOrWhiteSpace(avatar.ImageUrl))
                                                {
                                                    <a href="@avatar.ImageUrl" target="_blank" class="text-break">
                                                        @avatar.ImageUrl
                                                    </a>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not specified</span>
                                                }
                                            </td>
                                        </tr>
                                        <tr>
                                            <th scope="row">Created:</th>
                                            <td>
                                                @avatar.CreatedAt.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                                                @if (!string.IsNullOrWhiteSpace(avatar.CreatedBy))
                                                {
                                                    <br /><small class="text-muted">by @avatar.CreatedBy</small>
                                                }
                                            </td>
                                        </tr>
                                        @if (avatar.UpdatedAt.HasValue)
                                        {
                                            <tr>
                                                <th scope="row">Last Updated:</th>
                                                <td>
                                                    @avatar.UpdatedAt.Value.ToString("MMMM dd, yyyy 'at' hh:mm tt")
                                                    @if (!string.IsNullOrWhiteSpace(avatar.UpdatedBy))
                                                    {
                                                        <br /><small class="text-muted">by @avatar.UpdatedBy</small>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between mt-4">
                            <a href="/avatars" class="btn btn-secondary">
                                <i class="bi bi-arrow-left"></i> Back to Avatars
                            </a>
                            <div>
                                <a href="/avatars/edit/@avatar.Id" class="btn btn-primary">
                                    <i class="bi bi-pencil"></i> Edit Avatar
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    
    private AvatarDto? avatar;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadAvatar();
    }

    private async Task LoadAvatar()
    {
        isLoading = true;
        try
        {
            avatar = await AvatarService.GetByIdAsync(Id);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading avatar: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task DeleteAvatar()
    {
        if (avatar == null) return;
        
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
            $"Are you sure you want to delete '{avatar.Name}'? This action cannot be undone.");
        
        if (confirmed)
        {
            try
            {
                await AvatarService.DeleteAsync(avatar.Id);
                await JSRuntime.InvokeVoidAsync("alert", "Avatar deleted successfully!");
                NavigationManager.NavigateTo("/avatars");
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"Error deleting avatar: {ex.Message}");
            }
        }
    }
}
