# Skills Manager - Docker Compose
version: '3.8'

services:
  # Main web application
  skills-manager:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: skills-manager
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Server=sqlserver;Database=SkillsManagerDb;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true;
    depends_on:
      - sqlserver
    networks:
      - skills-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # SQL Server database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: skills-manager-db
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Passw0rd
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - skills-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrong@Passw0rd -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis cache (optional - for future scaling)
  redis:
    image: redis:7-alpine
    container_name: skills-manager-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - skills-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional - for production)
  nginx:
    image: nginx:alpine
    container_name: skills-manager-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - skills-manager
    networks:
      - skills-network
    restart: unless-stopped
    profiles:
      - production

# Named volumes for data persistence
volumes:
  sqlserver_data:
    driver: local
  redis_data:
    driver: local

# Custom network
networks:
  skills-network:
    driver: bridge
