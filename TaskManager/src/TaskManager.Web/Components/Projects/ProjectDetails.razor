@page "/projects/{Id:int}"
@using TaskManager.Core.Entities
@using TaskManager.Core.Interfaces.Services
@inject IProjectService ProjectService
@inject NavigationManager NavigationManager

<h3>Project Details</h3>

@if (project == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h4>@project.Name</h4>
            <div>
                <a href="/projects/edit/@project.Id" class="btn btn-warning btn-sm">Edit</a>
                <a href="/projects" class="btn btn-secondary btn-sm">Back to List</a>
            </div>
        </div>
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">Description</dt>
                <dd class="col-sm-9">@project.Description</dd>

                <dt class="col-sm-3">Start Date</dt>
                <dd class="col-sm-9">@project.StartDate.ToShortDateString()</dd>

                <dt class="col-sm-3">End Date</dt>
                <dd class="col-sm-9">@project.EndDate.ToShortDateString()</dd>

                <dt class="col-sm-3">Created At</dt>
                <dd class="col-sm-9">@project.CreatedAt.ToString("g")</dd>

                <dt class="col-sm-3">Updated At</dt>
                <dd class="col-sm-9">@project.UpdatedAt.ToString("g")</dd>
            </dl>
        </div>
    </div>

    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5>Tasks</h5>
            <a href="/tasks/create/@project.Id" class="btn btn-primary btn-sm">Add Task</a>
        </div>
        <div class="card-body">
            @if (project.Tasks == null || !project.Tasks.Any())
            {
                <p>No tasks found for this project.</p>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Status</th>
                                <th>Due Date</th>
                                <th>Priority</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var task in project.Tasks)
                            {
                                <tr>
                                    <td>@task.Title</td>
                                    <td>
                                        <span class="badge" style="background-color: @task.Status.ColorCode">
                                            @task.Status.Name
                                        </span>
                                    </td>
                                    <td>@task.DueDate.ToShortDateString()</td>
                                    <td>@task.Priority</td>
                                    <td>
                                        <a href="/tasks/@task.Id" class="btn btn-info btn-sm">Details</a>
                                        <a href="/tasks/edit/@task.Id" class="btn btn-warning btn-sm">Edit</a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Project project;

    protected override async Task OnInitializedAsync()
    {
        project = await ProjectService.GetProjectWithTasksAsync(Id);
    }
}